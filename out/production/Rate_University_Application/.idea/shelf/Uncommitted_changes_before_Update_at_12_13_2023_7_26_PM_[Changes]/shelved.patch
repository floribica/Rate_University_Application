Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 8a8882ee44df606f24c5077b42bd2f2aa7f11a89)
+++ /dev/null	(revision 8a8882ee44df606f24c5077b42bd2f2aa7f11a89)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8a8882ee44df606f24c5077b42bd2f2aa7f11a89)
+++ b/.idea/misc.xml	(date 1702411975899)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" project-jdk-name="IntelliJ IDEA IU-223.8214.52" project-jdk-type="IDEA JDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/CourseService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class CourseService {\r\n\r\n    private List<Course> allCourses;\r\n\r\n\r\n    public CourseService() {\r\n\r\n        this.allCourses = new ArrayList<>();\r\n    }\r\n\r\n    public List<Course> getAllCourses() {\r\n        return new ArrayList<>(allCourses);\r\n    }\r\n\r\n    public boolean enrollStudent(Course course, Student student) {\r\n        // Check if there's available capacity in the course\r\n        if (course.getCapacity() > 0) {\r\n            // Enroll the student\r\n\r\n            Scanner scanner = new Scanner(System.in);\r\n\r\n            System.out.println(\"Enter your name:\");\r\n            String studentName = scanner.nextLine();\r\n\r\n            System.out.println(\"Enter the author of the course:\");\r\n            String courseAuthor = scanner.nextLine();\r\n\r\n            System.out.println(\"Enter the name of the course you want to enroll in:\");\r\n            String courseName = scanner.nextLine();\r\n\r\n        }\r\n        course.setCapacity(course.getCapacity() - 1);\r\n        return true;\r\n    }\r\n\r\n    private int registeredStudents;\r\n\r\n    public int getRegisteredStudents() {\r\n        return registeredStudents;\r\n    }\r\n\r\n    public void registerStudent() {\r\n        registeredStudents++;\r\n    }\r\n    public void dropStudent(Course course, Student student) {\r\n        // Implement logic to drop a student from a course\r\n        // This might involve updating the course's capacity\r\n        course.setCapacity(course.getCapacity() + 1);\r\n    }\r\n    public boolean isCourseAvailable(String courseName) {\r\n        for (Course course : allCourses) {\r\n            if (course.getCourseName().equals(courseName)) {\r\n                return true; // Course found, so it is available\r\n            }\r\n        }\r\n        return false; // Course not found, so it is not available\r\n    }\r\n    public void addCourse(String author, String courseName, int capacity, Date startDate, Date endDate) {\r\n        Course newCourse = new Course(author, courseName, capacity, startDate, endDate);\r\n        allCourses.add(newCourse);\r\n    }\r\n    public void tableCourse() {\r\n        System.out.println(\"Course Table:\");\r\n        System.out.println(\"| Author     | Course Name        | Capacity | Start Date    | End Date      |\");\r\n        System.out.println(\"|------------|--------------------|----------|---------------|---------------|\");\r\n\r\n        for (Course course : allCourses) {\r\n            System.out.println(course);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CourseService.java b/src/CourseService.java
--- a/src/CourseService.java	(revision 8a8882ee44df606f24c5077b42bd2f2aa7f11a89)
+++ b/src/CourseService.java	(date 1702411933516)
@@ -1,4 +1,5 @@
 package src;
+
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
Index: src/MainApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src;\r\nimport java.util.Date;\r\n\r\npublic class MainApplication {\r\n    public static void main(String[] args) {\r\n        CourseService courseService = new CourseService();\r\n\r\n        // Adding sample courses\r\n        courseService.addCourse(\"John Doe\", \"Java Programming\", 30, new Date(), new Date());\r\n        courseService.addCourse(\"Jane Smith\", \"Web Development\", 25, new Date(), new Date());\r\n\r\n        // Display available courses\r\n        courseService.tableCourse();\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/MainApplication.java b/src/MainApplication.java
--- a/src/MainApplication.java	(revision 8a8882ee44df606f24c5077b42bd2f2aa7f11a89)
+++ b/src/MainApplication.java	(date 1702411933508)
@@ -1,6 +1,7 @@
 package src;
 import java.util.Date;
 
+
 public class MainApplication {
     public static void main(String[] args) {
         CourseService courseService = new CourseService();
